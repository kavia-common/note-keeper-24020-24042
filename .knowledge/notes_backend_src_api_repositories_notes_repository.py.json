{"is_source_file": true, "format": "Python", "description": "This file defines an abstract repository interface for notes and provides an in-memory implementation. It encapsulates CRUD operations for notes, facilitating decoupling of persistence logic from business logic within a note-taking application.", "external_files": ["../models/schemas"], "external_methods": ["Note", "NoteCreate", "NoteUpdate"], "published": ["NotesRepository", "InMemoryNotesRepository"], "classes": [{"name": "NotesRepository", "description": "Abstract base class defining the interface for notes repository implementations, including methods for listing, retrieving, creating, updating, and deleting notes."}, {"name": "InMemoryNotesRepository", "description": "Concrete in-memory implementation of the NotesRepository interface, storing notes in a dictionary and providing methods for CRUD operations with deterministic ordering."}], "methods": [{"name": "List[Note] list_notes(self)", "description": "Returns all notes ordered by most recently updated first.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[Note] get_note(self, note_id: str)", "description": "Retrieves a note by its unique ID, or returns None if not found.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Note create_note(self, payload: NoteCreate)", "description": "Creates a new note from the provided payload, assigning a unique ID and current timestamp.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "Optional[Note] update_note(self, note_id: str, payload: NoteUpdate)", "description": "Updates fields of an existing note identified by ID; updates the 'updated_at' timestamp.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: str)", "description": "Deletes a note by its ID, returning True if deletion was successful.", "scope": "NotesRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "InMemoryNotesRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["datetime.now", "uuid.uuid4", "Note.model_copy"], "search-terms": ["NotesRepository", "InMemoryNotesRepository", "CRUD", "notes persistence", "mock repository", "note model"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "InMemoryNotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^class InMemoryNotesRepository(NotesRepository):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotesRepository", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^class NotesRepository(ABC):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def create_note(self, payload: NoteCreate) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, payload: NoteCreate)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def create_note(self, payload: NoteCreate) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, payload: NoteCreate)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def delete_note(self, note_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: str)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def delete_note(self, note_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def get_note(self, note_id: str) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def get_note(self, note_id: str) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def list_notes(self) -> List[Note]:$/", "language": "Python", "typeref": "typename:List[Note]", "kind": "member", "signature": "(self)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def list_notes(self) -> List[Note]:$/", "language": "Python", "typeref": "typename:List[Note]", "kind": "member", "signature": "(self)", "scope": "NotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def update_note(self, note_id: str, payload: NoteUpdate) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str, payload: NoteUpdate)", "scope": "InMemoryNotesRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/repositories/notes_repository.py", "pattern": "/^    def update_note(self, note_id: str, payload: NoteUpdate) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: str, payload: NoteUpdate)", "scope": "NotesRepository", "scopeKind": "class"}], "hash": "cdc2d2b101a71917978e427732d111a6", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/repositories/notes_repository.py", "revision_history": [{"15": ""}]}