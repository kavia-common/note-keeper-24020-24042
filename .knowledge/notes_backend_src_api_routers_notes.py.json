{"is_source_file": true, "format": "Python", "description": "This file defines the API routes for managing notes in a RESTful API using FastAPI. It includes endpoints for listing, creating, retrieving, updating, and deleting notes, and references external schemas, repository, and dependency functions.", "external_files": ["../models/schemas", "../repositories/notes_repository", "../dependencies"], "external_methods": ["get_notes_repository", "NotesRepository.list_notes", "NotesRepository.create_note", "NotesRepository.get_note", "NotesRepository.update_note", "NotesRepository.delete_note"], "published": ["router"], "classes": [], "methods": [{"name": "List[Note] list_notes(repo: NotesRepository = Depends(get_notes_repository))", "description": "Returns a list of all notes, ordered by last update time.", "scope": "", "scopeKind": ""}, {"name": "Note create_note(payload: NoteCreate, repo: NotesRepository = Depends(get_notes_repository))", "description": "Creates a new note with provided data.", "scope": "", "scopeKind": ""}, {"name": "Note get_note(note_id: str, repo: NotesRepository = Depends(get_notes_repository))", "description": "Retrieves a specific note by its ID.", "scope": "", "scopeKind": ""}, {"name": "Note update_note(note_id: str, payload: NoteUpdate, repo: NotesRepository = Depends(get_notes_repository))", "description": "Updates fields of a note identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "None delete_note(note_id: str, repo: NotesRepository = Depends(get_notes_repository))", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}], "calls": ["repo.list_notes()", "repo.create_note(payload)", "repo.get_note(note_id)", "repo.update_note(note_id, payload)", "repo.delete_note(note_id)"], "search-terms": ["FastAPI notes router", "CRUD operations notes API", "notes API endpoints", "note repository", "notes model schemas"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^def create_note(payload: NoteCreate, repo: NotesRepository = Depends(get_notes_repository)) -> N/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(payload: NoteCreate, repo: NotesRepository = Depends(get_notes_repository))"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^def delete_note(note_id: str, repo: NotesRepository = Depends(get_notes_repository)) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(note_id: str, repo: NotesRepository = Depends(get_notes_repository))"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^def get_note(note_id: str, repo: NotesRepository = Depends(get_notes_repository)) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(note_id: str, repo: NotesRepository = Depends(get_notes_repository))"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^def list_notes(repo: NotesRepository = Depends(get_notes_repository)) -> List[Note]:$/", "language": "Python", "typeref": "typename:List[Note]", "kind": "function", "signature": "(repo: NotesRepository = Depends(get_notes_repository))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-24020-24042/notes_backend/src/api/routers/notes.py", "pattern": "/^def update_note(note_id: str, payload: NoteUpdate, repo: NotesRepository = Depends(get_notes_rep/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(note_id: str, payload: NoteUpdate, repo: NotesRepository = Depends(get_notes_repository))"}], "hash": "6a5792e29ebafdf8975df28bae95a18a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/routers/notes.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}